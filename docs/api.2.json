{
	"/access/list" :{
		"method" : "get",
		"description" : "Get all access level",
		"token" : true,
		"parameter" : []
	},
	"/access/detail" :{
		"method" : "get",
		"description" : "Get access detail",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Access level ID"
		}]
	},
	"/access/create" :{
		"method" : "post",
		"content_type" : "application/json",
		"description" : "Create new access level",
		"token" : true,
		"parameter" : [{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "Access level name"
		},{
			"name" : "module",
			"type" : "Array",
			"required" : true,
			"description" : "Access level modules"
		}]
	},
	"/access/update" :{
		"method" : "put",
		"content_type" : "application/json",
		"description" : "Update access level data",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Access level ID"
		},{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "Access level name"
		},{
			"name" : "module",
			"type" : "Array",
			"required" : true,
			"description" : "Access level modules"
		}]
	},
	"/access/status" :{
		"method" : "put",
		"description" : "Change access level status",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Access level ID"
		}]
	},
	"/module" :{
		"method" : "get",
		"description" : "Get all module",
		"token" : true,
		"parameter" : []
	},
	"/user/authenticate" :{
		"method" : "post",
		"description" : "Authenticate user to get access token",
		"content_type" : "x-www-form-urlencoded",
		"token" : false,
		"parameter" : [{
			"name" : "username",
			"type" : "string",
			"required" : true,
			"description" : "User's username"
		},{
			"name" : "password",
			"type" : "string",
			"required" : true,
			"description" : "User's password"
		}]
	},
	"/user/create" :{
		"method" : "post",
		"description" : "Create new users",
		"token" : true,
		"parameter" : [{
			"name" : "username",
			"type" : "string",
			"required" : true,
			"description" : "User's username"
		},{
			"name" : "password",
			"type" : "string",
			"required" : true,
			"description" : "User's password"
		},{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "User's name"
		},{
			"name" : "email",
			"type" : "string",
			"required" : false,
			"description" : "User's email"
		},{
			"name" : "level",
			"type" : "integer",
			"required" : true,
			"description" : "User's access level ID"
		}]
	},
	"/user/update" :{
		"method" : "put",
		"description" : "Update users data",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "User's ID"
		},{
			"name" : "username",
			"type" : "string",
			"required" : true,
			"description" : "User's username"
		},{
			"name" : "password",
			"type" : "string",
			"required" : false,
			"description" : "User's password, Send if want to change password"
		},{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "User's name"
		},{
			"name" : "email",
			"type" : "string",
			"required" : false,
			"description" : "User's email"
		},{
			"name" : "level",
			"type" : "integer",
			"required" : true,
			"description" : "User's access level ID"
		}]
	},
	"/user/status" :{
		"method" : "put",
		"description" : "Change users status",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "User's ID"
		}]
	},
	"/user/list" :{
		"method" : "get",
		"description" : "Get all users",
		"token" : true,
		"parameter" : [{
			"name" : "name",
			"type" : "String",
			"required" : false,
			"description" : "Filter data by user's name"
		}]
	},
	"/user/detail" :{
		"method" : "get",
		"description" : "Get user by user id",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "String",
			"required" : true,
			"description" : "Get user by user id"
		}]
	},
	"/vendor/list" :{
		"method" : "get",
		"description" : "Get vendor",
		"token" : true,
		"parameter" : []
	},
	"/vendor/create" :{
		"method" : "post",
		"description" : "Create new vendor",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [
			{
				"name" : "cafe_name",
				"type" : "string",
				"required" : true,
				"description" : "Vendor name"
			},
			{
				"name" : "fullname",
				"type" : "string",
				"required" : true,
				"description" : "Employee fullname"
			},
			{
				"name" : "email",
				"type" : "string",
				"required" : true,
				"description" : "Employee email"
			},
			{
				"name" : "username",
				"type" : "string",
				"required" : true,
				"description" : "Employee username"
			},
			{
				"name" : "password",
				"type" : "string",
				"required" : true,
				"description" : "Employee password"
			}
		]
	},
	"/vendor/update" :{
		"method" : "put",
		"description" : "Update vendor data",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Vendor ID"
		},{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "Vendor name"
		}]
	},
	"/vendor/delete" :{
		"method" : "put",
		"description" : "Delete vendor data",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Vendor ID"
		}]
	},
	"/vendor/status" :{
		"method" : "put",
		"description" : "Change vendor status",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Vendor ID"
		}]
	},
	"/vendor/authenticate" :{
		"method" : "post",
		"description" : "Authenticate employee to get access token",
		"content_type" : "x-www-form-urlencoded",
		"token" : false,
		"parameter" : [{
			"name" : "username",
			"type" : "string",
			"required" : true,
			"description" : "User's username"
		},{
			"name" : "password",
			"type" : "string",
			"required" : true,
			"description" : "User's password"
		}]
	},
	"/vendor/employee/list" :{
		"method" : "get",
		"description" : "Get vendor employee list",
		"token" : true,
		"parameter" : [{
			"name" : "cafe",
			"type" : "integer",
			"required" : true,
			"description" : "Vendor ID"
		}]
	},
	"/vendor/employee/detail" :{
		"method" : "get",
		"description" : "Get vendor employee detail",
		"token" : true,
		"parameter" : [
			{
				"name" : "id",
				"type" : "integer",
				"required" : true,
				"description" : "Employee ID"
			}
		]
	},
	"/vendor/employee/create" :{
		"method" : "post",
		"description" : "Create new vendor employee",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "cafe",
			"type" : "integer",
			"required" : true,
			"description" : "Vendor ID"
		},{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "Employee name"
		},{
			"name" : "email",
			"type" : "string",
			"required" : true,
			"description" : "Employee email"
		},
		{
			"name" : "username",
			"type" : "string",
			"required" : true,
			"description" : "Employee username"
		},
		{
			"name" : "password",
			"type" : "string",
			"required" : true,
			"description" : "Employee password"
		},
		{
			"name" : "access",
			"type" : "integer",
			"required" : true,
			"description" : "Employee level access"
		}]
	},
	"/vendor/employee/update" :{
		"method" : "put",
		"description" : "Update vendor employee",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Employee ID"
		},{
			"name" : "cafe",
			"type" : "integer",
			"required" : true,
			"description" : "Vendor ID"
		},{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "Employee name"
		},{
			"name" : "email",
			"type" : "string",
			"required" : true,
			"description" : "Employee email"
		},
		{
			"name" : "username",
			"type" : "string",
			"required" : true,
			"description" : "Employee username"
		},
		{
			"name" : "password",
			"type" : "string",
			"required" : true,
			"description" : "Employee password"
		},
		{
			"name" : "access",
			"type" : "integer",
			"required" : true,
			"description" : "Employee level access"
		}]
	},
	"/vendor/employee/create" :{
		"method" : "put",
		"description" : "Delete vendor employee",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Employee ID"
		},{
			"name" : "cafe",
			"type" : "integer",
			"required" : true,
			"description" : "Vendor ID"
		}]
	},
	"/vendor/menu" :{
		"method" : "get",
		"description" : "Get vendor menu",
		"token" : true,
		"parameter" : [{
			"name" : "cafe",
			"type" : "integer",
			"required" : true,
			"description" : "Vendor ID"
		}]
	},
	"/vendor/menu/list" :{
		"method" : "get",
		"description" : "Get vendor menu list",
		"token" : true,
		"parameter" : [{
			"name" : "cafe",
			"type" : "integer",
			"required" : true,
			"description" : "Vendor ID"
		},{
			"name" : "limit",
			"type" : "integer",
			"required" : false,
			"description" : "Limit of data, default 10"
		},{
			"name" : "offset",
			"type" : "integer",
			"required" : false,
			"description" : "Start of data, default 0"
		},{
			"name" : "name",
			"type" : "string",
			"required" : false,
			"description" : "Filter data by menu name"
		}]
	},
	"/vendor/menu/create" :{
		"method" : "post",
		"description" : "Create new vendor menu",
		"content_type" : "form-data",
		"token" : true,
		"parameter" : [{
			"name" : "cafe",
			"type" : "integer",
			"required" : true,
			"description" : "Vendor ID"
		},{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "Menu name"
		},{
			"name" : "price",
			"type" : "numeric",
			"required" : true,
			"description" : "Menu price"
		},{
			"name" : "description",
			"type" : "string",
			"required" : false,
			"description" : "Menu description"
		},{
			"name" : "image",
			"type" : "file",
			"required" : false,
			"description" : "Menu image"
		}]
	},
	"/vendor/menu/update" :{
		"method" : "put",
		"description" : "Update vendor menu data",
		"content_type" : "form-data",
		"token" : true,
		"parameter" : [{
			"name" : "cafe",
			"type" : "integer",
			"required" : true,
			"description" : "Vendor ID"
		},{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Menu ID"
		},{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "Menu name"
		},{
			"name" : "price",
			"type" : "numeric",
			"required" : true,
			"description" : "Menu price"
		},{
			"name" : "description",
			"type" : "string",
			"required" : false,
			"description" : "Menu description"
		},{
			"name" : "image",
			"type" : "file",
			"required" : false,
			"description" : "Menu image"
		}]
	},
	"/vendor/menu/delete" :{
		"method" : "put",
		"description" : "Delete vendor menu data",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Menu ID"
		}]
	},
	"/vendor/menu/status" :{
		"method" : "put",
		"description" : "Change vendor menu status",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Menu ID"
		}]
	},
	"/vendor/transaction/create" :{
		"method" : "post",
		"content_type" : "application/json",
		"description" : "Create new vendor transaction",
		"token" : true,
		"parameter" : [
			{
				"name" : "cafe",
				"type" : "integer",
				"required" : true,
				"description" : "Vendor ID"
			},
			{
				"name" : "menu",
				"type" : "Array",
				"required" : true,
				"description" : "Transaction menu, Array of object => {\"id\":<menu ID>, \"quantity\": <menu quantity>}"
			}
		]
	},
	"/vendor/transaction/print" :{
		"method" : "get",
		"description" : "Get vendor transaction print data",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Vendor transaction ID"
		}]
	},
	"/vendor/report" :{
		"method" : "get",
		"description" : "Get report vendor owner",
		"token" : true,
		"parameter" : [
			{
				"name" : "type",
				"type" : "string",
				"required" : true,
				"description" : "Type report (day, month, year). Default report by month"
			},
			{
				"name" : "start_date",
				"type" : "string",
				"required" : true,
				"description" : "Start date"
			},
			{
				"name" : "end_date",
				"type" : "string",
				"required" : true,
				"description" : "End Date"
			},
			{
				"name" : "cafe",
				"type" : "integer",
				"required" : true,
				"description" : "Vendor ID"
			}
		]
	},
	"/card/type" :{
		"method" : "get",
		"description" : "Get card type",
		"token" : false,
		"parameter" : []
	},
	"/card/type/list" :{
		"method" : "get",
		"description" : "Get list of card type",
		"token" : true,
		"parameter" : [{
			"name" : "limit",
			"type" : "integer",
			"required" : false,
			"description" : "Limit of data, default 10"
		},{
			"name" : "offset",
			"type" : "integer",
			"required" : false,
			"description" : "Start of data, default 0"
		}]
	},
	"/card/type/create" :{
		"method" : "post",
		"description" : "Create new card type",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "Card type name"
		},{
			"name" : "minimum",
			"type" : "numeric",
			"required" : true,
			"description" : "Card minimum topup value"
		},{
			"name" : "bonus",
			"type" : "numeric",
			"required" : true,
			"description" : "Card topup bonus value"
		},{
			"name" : "refund",
			"type" : "boolean",
			"required" : true,
			"description" : "Card topup refund"
		}]
	},
	"/card/type/update" :{
		"method" : "put",
		"description" : "Update card type data",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Card type ID"
		},{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "Card type name"
		},{
			"name" : "minimun",
			"type" : "numeric",
			"required" : true,
			"description" : "Card minimun topup value"
		},{
			"name" : "bonus",
			"type" : "numeric",
			"required" : true,
			"description" : "Card topup bonus value"
		},{
			"name" : "refund",
			"type" : "boolean",
			"required" : true,
			"description" : "Card topup refund"
		}]
	},
	"/card/type/delete" :{
		"method" : "put",
		"description" : "Delete card type data",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Card type ID"
		}]
	},
	"/card/type/status" :{
		"method" : "put",
		"description" : "Change card type deleted status",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Card type ID"
		},{
			"name" : "status",
			"type" : "boolean",
			"required" : true,
			"description" : "Card type status"
		}]
	},
	"/member" :{
		"method" : "get",
		"description" : "Get members",
		"token" : true,
		"parameter" : [{
			"name" : "name",
			"type" : "string",
			"required" : false,
			"description" : "Filter data by member name"
		}]
	},
	"/member/detail" :{
		"method" : "get",
		"description" : "Get member detail data",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Member ID"
		}]
	},
	"/member/list" :{
		"method" : "get",
		"description" : "Get members list",
		"token" : true,
		"parameter" : [{
			"name" : "limit",
			"type" : "integer",
			"required" : false,
			"description" : "Limit of data, default 10"
		},{
			"name" : "offset",
			"type" : "integer",
			"required" : false,
			"description" : "Start of data, default 0"
		},{
			"name" : "name",
			"type" : "string",
			"required" : false,
			"description" : "Filter data by member name"
		}]
	},
	"/member/create" :{
		"method" : "post",
		"description" : "Create new member",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "Member fullname"
		},{
			"name" : "phone",
			"type" : "string",
			"required" : false,
			"description" : "Member phone number"
		},{
			"name" : "email",
			"type" : "string",
			"required" : false,
			"description" : "Member email"
		},{
			"name" : "address",
			"type" : "string",
			"required" : false,
			"description" : "Member address"
		},{
			"name" : "payment",
			"type" : "integer",
			"required" : true,
			"description" : "Payment type (1: Cash | 2: Debit | 3: Credit Card)"
		},{
			"name" : "card",
			"type" : "integer",
			"required" : true,
			"description" : "Member card type"
		}]
	},
	"/member/update" :{
		"method" : "put",
		"description" : "Update member data",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Member ID"
		},{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "Member fullname"
		},{
			"name" : "phone",
			"type" : "string",
			"required" : false,
			"description" : "Member phone number"
		},{
			"name" : "email",
			"type" : "string",
			"required" : false,
			"description" : "Member email"
		},{
			"name" : "address",
			"type" : "string",
			"required" : false,
			"description" : "Member address"
		}]
	},
	"/member/delete" :{
		"method" : "put",
		"description" : "Delete member data",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Member ID"
		}]
	},
	"/member/status" :{
		"method" : "put",
		"description" : "Change member status",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Member ID"
		}]
	},
	"/member/authenticate" :{
		"method" : "post",
		"description" : "Authenticate member using card id",
		"content_type" : "x-www-form-urlencoded",
		"token" : false,
		"parameter" : [{
			"name" : "card",
			"type" : "numeric",
			"required" : true,
			"description" : "Member card ID"
		}]
	},
	"/member/topup" :{
		"method" : "post",
		"description" : "Topup member balance",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "balance",
			"type" : "numeric",
			"required" : true,
			"description" : "Topup balance"
		},{
			"name" : "payment",
			"type" : "integer",
			"required" : true,
			"description" : "Payment type (1: Cash | 2: Debit | 3: Credit Card)"
		}]
	},
	"/member/topup/print" :{
		"method" : "get",
		"description" : "Get Topup data",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Topup transaction ID"
		}]
	},
	"/member/refund" :{
		"method" : "post",
		"description" : "Refund member card",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "card",
			"type" : "string",
			"required" : true,
			"description" : "Card ID"
		}]
	},
	"/member/card/change" :{
		"method" : "put",
		"description" : "Change member card",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "member",
			"type" : "integer",
			"required" : true,
			"description" : "Member ID"
		},{
			"name" : "card",
			"type" : "integer",
			"required" : true,
			"description" : "Card type ID"
		}]
	},
	"/report/transaction/cafe" :{
		"method" : "get",
		"description" : "Get report cafe transaction",
		"token" : true,
		"parameter" : [{
			"name" : "limit",
			"type" : "integer",
			"required" : false,
			"description" : "Limit of data, default 10"
		},{
			"name" : "offset",
			"type" : "integer",
			"required" : false,
			"description" : "Start of data, default 0"
		},{
			"name" : "start_date",
			"type" : "date",
			"required" : false,
			"description" : "Start date"
		},{
			"name" : "end_date",
			"type" : "date",
			"required" : false,
			"description" : "End date"
		},{
			"name" : "cafe",
			"type" : "string",
			"required" : false,
			"description" : "Filter data by cafe ID"
		}]
	},
	"/report/transaction/service" :{
		"method" : "get",
		"description" : "Get report service transaction",
		"token" : true,
		"parameter" : [{
			"name" : "limit",
			"type" : "integer",
			"required" : false,
			"description" : "Limit of data, default 10"
		},{
			"name" : "offset",
			"type" : "integer",
			"required" : false,
			"description" : "Start of data, default 0"
		},{
			"name" : "start_date",
			"type" : "date",
			"required" : false,
			"description" : "Start date"
		},{
			"name" : "end_date",
			"type" : "date",
			"required" : false,
			"description" : "End date"
		},{
			"name" : "service",
			"type" : "string",
			"required" : false,
			"description" : "Filter data by service ID"
		}]
	},
	"/report/summary/cafe" :{
		"method" : "get",
		"description" : "Get report summary cafe transaction",
		"token" : true,
		"parameter" : [{
			"name" : "start_date",
			"type" : "date",
			"required" : true,
			"description" : "Start date"
		},{
			"name" : "end_date",
			"type" : "date",
			"required" : true,
			"description" : "End date"
		}]
	},
	"/report/summary/service" :{
		"method" : "get",
		"description" : "Get report summary service transaction",
		"token" : true,
		"parameter" : [{
			"name" : "start_date",
			"type" : "date",
			"required" : true,
			"description" : "Start date"
		},{
			"name" : "end_date",
			"type" : "date",
			"required" : true,
			"description" : "End date"
		}]
	},
	"/service" :{
		"method" : "get",
		"description" : "Get service data",
		"token" : true,
		"parameter" : [{
			"name" : "type",
			"type" : "integer",
			"required" : true,
			"description" : "Service type ID"
		}]
	},
	"/service/list" :{
		"method" : "get",
		"description" : "Get list of service data",
		"token" : true,
		"parameter" : [{
			"name" : "type",
			"type" : "integer",
			"required" : true,
			"description" : "Service type ID"
		},{
			"name" : "limit",
			"type" : "integer",
			"required" : false,
			"description" : "Limit of data, default 10"
		},{
			"name" : "offset",
			"type" : "integer",
			"required" : false,
			"description" : "Start of data, default 0"
		}]
	},
	"/service/create" :{
		"method" : "post",
		"description" : "Create new service data",
		"content_type" : "form-data",
		"token" : true,
		"parameter" : [{
			"name" : "type",
			"type" : "integer",
			"required" : true,
			"description" : "Service type ID"
		},{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "Service name"
		},{
			"name" : "price",
			"type" : "numeric",
			"required" : true,
			"description" : "Service price"
		},{
			"name" : "description",
			"type" : "string",
			"required" : false,
			"description" : "Service description"
		},{
			"name" : "image",
			"type" : "file",
			"required" : false,
			"description" : "Service image"
		}]
	},
	"/service/update" :{
		"method" : "put",
		"description" : "Update service data",
		"content_type" : "form-data",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Service ID"
		},{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "Service name"
		},{
			"name" : "price",
			"type" : "numeric",
			"required" : true,
			"description" : "Service price"
		},{
			"name" : "description",
			"type" : "string",
			"required" : false,
			"description" : "Service description"
		},{
			"name" : "image",
			"type" : "file",
			"required" : false,
			"description" : "Service image"
		}]
	},
	"/service/delete" :{
		"method" : "put",
		"description" : "Delete service data",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Service ID"
		}]
	},
	"/service/status" :{
		"method" : "put",
		"description" : "Change service status",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Service ID"
		}]
	},
	"/service/type" :{
		"method" : "get",
		"description" : "Get service type",
		"token" : true,
		"parameter" : []
	},
	"/service/type/list" :{
		"method" : "get",
		"description" : "Get service type list",
		"token" : true,
		"parameter" : [{
			"name" : "limit",
			"type" : "integer",
			"required" : false,
			"description" : "Limit of data, default 10"
		},{
			"name" : "offset",
			"type" : "integer",
			"required" : false,
			"description" : "Start of data, default 0"
		}]
	},
	"/service/type/create" :{
		"method" : "post",
		"description" : "Create new service type",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "Service type name"
		}]
	},
	"/service/type/update" :{
		"method" : "put",
		"description" : "Update service type data",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Service type ID"
		},{
			"name" : "name",
			"type" : "string",
			"required" : true,
			"description" : "Service type name"
		}]
	},
	"/service/type/delete" :{
		"method" : "put",
		"description" : "Delete service type data",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Service type ID"
		}]
	},
	"/service/type/status" :{
		"method" : "put",
		"description" : "Change service type status",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Service type ID"
		}]
	},
	"/service/transaction/create" :{
		"method" : "post",
		"description" : "Create service transaction",
		"content_type" : "x-www-form-urlencoded",
		"token" : true,
		"parameter" : [{
			"name" : "service",
			"type" : "integer",
			"required" : true,
			"description" : "Service ID"
		}]
	},
	"/service/transaction/print" :{
		"method" : "get",
		"description" : "Get service transaction print data",
		"token" : true,
		"parameter" : [{
			"name" : "id",
			"type" : "integer",
			"required" : true,
			"description" : "Service Transaction ID"
		}]
	}
}